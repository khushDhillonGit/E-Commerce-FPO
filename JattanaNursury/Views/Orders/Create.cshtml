@model JattanaNursury.ViewModels.OrderViewModel;

<div>
    <div class="row">
        <h2 class="text-center">Sale</h2>
        <div class="col-8">
            <div class="row">
                <div class="col-12 mt-5">
                    <h3 class="text-center mb-3">Add Product</h3>
                    <div class="row form-group ">
                        <div class="col-6">
                            <div class="input-group h-100">
                                <select class="form-select" id="productSearch">
                                    <option value=""></option>
                                </select>
                            </div>
                        </div>
                        <div class="col-2">
                            <div class="input-group">
                                <input placeholder="Quantity" class="form-control" id="quantityInput" min="1" type="number" />
                            </div>
                        </div>
                        <div class="col-4">
                            <button id="addBtn" class="w-100 btn btn-success">Add</button>
                        </div>
                    </div>
                </div>
                <div class="col-12 mt-5">
                    <h3 class="text-center mb-3">Products</h3>
                    <table class="table table-striped table-hover table-bordered">
                        <thead>
                            <tr>
                                <th scope="col" >No</th>
                                <th scope="col" class="w-50">Product</th>
                                <th scope="col">Quantity</th>
                                <th scope="col">Price</th>
                                <th scope="col">TotalPrice</th>
                                <th scope="col"></th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="col-4">
            <div class="row">
                <div class="col-12 mt-5">
                    <h3 class="text-center mb-3"> Customer Information</h3>
                    <div class="d-flex flex-column" style="gap:15px;">
                        <div class="input-group">
                            <input placeholder="Name" required class="form-control" id="nameInput" />
                        </div>
                        <div class="input-group">
                            <input placeholder="Phone Number" class="form-control" id="phoneInput" required />
                        </div>
                        <div class="input-group">
                            <input placeholder="Email" class="form-control" id="emailInput" required />
                        </div>
                        <div class="input-group">
                            <input placeholder="Address" class="form-control" required id="addInput" />
                        </div>
                    </div>
                </div>
                <div class="col-12 mt-5">
                    <h3 class="text-center mb-3">Billing</h3>
                    <div class="d-flex flex-column" style="gap:15px;">
                        <div class="input-group">
                            <input placeholder="Employee" class="form-control" id="empInput" />
                        </div>
                        <div class="input-group">
                            <span class="input-group-text" id="inputGroup-sizing-default">$ Price</span>
                            <input disabled type="number" class="form-control" value="0.00" id="totalPrice" />
                        </div>
                        <div class="input-group">
                            <span class="input-group-text" id="inputGroup-sizing-default">Discount %</span>
                            <input placeholder="Discount" min="0" type="number" value="0" class="form-control" id="discountInput" />
                        </div>
                        <div class="input-group">
                            <span class="input-group-text" id="inputGroup-sizing-default">$ Bill</span>
                            <input disabled id="billPrice" class="form-control" value="0.00" type="number" />
                        </div>
                        <button type="submit" id="saleBtn" class="btn btn-danger">Sale</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>

        let productsInList = [];
        $(document).ready(function () {
            $('#productSearch').select2({
                theme: "classic",
                ajax:
                {
                    delay:200,
                    url: '/Orders/GetProductsByName',
                    dataType: 'json',
                    type: 'get',
                    contentType: "application/json; charset=utf-8",
                    delay: 250,
                    data: function (params) {
                        return {
                            search: params.term
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: data.map((item) => ({
                                id: item.id,
                                text: item.name,
                                price: item.unitPrice,
                                quantity: item.quantity,
                                totalPrice: item.totalPrice
                            }))
                        };
                    },
                },
                placeholder: 'Search Product...',
                minimumInputLength: 0,
                templateResult: formatResults
            });
        });
        // var table = $('<table>').attr('width', '100%').addClass('table table-bordered');
        // table.append($('<thead>').append($('<th>').text("Name"), $('<th>').text("Price"), $('<th>').text("Quantity")));
        // table.append($(''));
        // $('.select2-results').append(table);

        function formatResults(data) {
            
            if (data.loading)
                return data.text;

            // table.append($('<tbody>').append($('<tr>').append($('<td>').text(data.text), $('<td>').text(data.price), $('<td>').text(data.quantity))));
            var container = $(
                `    <table class="table table-bordered" style="margin:0;" width="100%">
                <thead>
                    <th class="w-50">Name</th>
                    <th class="w-25">Price</th>
                    <th>Quantity</th>
                </thead>
                <tr>
                     <td>
                         <p>${data.text}</p>
                     </td>
                                   <td>
                                         <p>${data.price}</p>
                             </td>
                                          <td>
                                 <p>${data.quantity}</p>
                             </td>
                 </tr>
              </table>`
            );

            return container;
        }

        $('#addBtn').on('click', function () {

            const product = $('#productSearch').select2('data')[0];

            const quantity = parseFloat($('#quantityInput').val());
            if (isNaN(quantity) || quantity === null || quantity < 1) {
                alert("Please enter a valid quantity!");
                return;
            }

            var quantityInList = getQuantityFromListById(product.id);

            if (product.quantity < quantity + quantityInList) 
            {
                alert("Invalid quantity");
                return;
            }

            const price = parseFloat(product.price);
            if (quantityInList > 0) {
                let index = productsInList.findIndex((item) => item.id === product.id);
                if (index !== -1) 
                {
                    productsInList[index].quantity += quantity;
                    productsInList[index].totalPrice = productsInList[index].quantity * price;
                }
            }
            else {

                let listProduct = { pId: createUniqueId(), id: product.id, name: product.text, quantity: quantity, price: price, totalPrice: price * quantity };

                if (listProduct.pId == null) {
                    alert("error while adding product");
                }
                else {
                    productsInList.push(listProduct);
                }
            }
            showProductsInList();
            updatePrice();
        });

        function showProductsInList() {

            let no = 0;
            let tbody = $('.table tbody');
            tbody.html("");
            productsInList.forEach((item) => {
                no = no + 1;
                tbody.append(
                    $('<tr>').append(
                        $('<td>').text(no),
                        $('<td>').text(item.name),
                        $('<td>').text(item.quantity),
                        $('<td>').text(item.price),
                        $('<td>').text(item.totalPrice),
                        $('<td>').append($('<i>').addClass('remove-btn c-pointer fa fa-trash').data("uId", item.pId)),
                    )
                );
            });

            $('.remove-btn').on('click', function () {
                const id = $(this).data("uId");
                productsInList = productsInList.filter((item) => item.pId != id);
                showProductsInList();
                updatePrice();
            });
        }
     
        function getQuantityFromListById(id)
        {
            const quantity = productsInList.filter((item) => item.id == id).reduce((acc, item) => { return acc + item.quantity },0);
            return quantity;
        }

        function createUniqueId() 
        {
            return Date.now().toString(36) + Math.random().toString(36).substr(2);
        }

        function updatePrice() {
            const price = productsInList.reduce((acc, item) => { return acc + item.totalPrice }, 0);
            $('#totalPrice').val(price);
            calculateBillPrice();
        }

        $('#discountInput').on('change', function () {
            calculateBillPrice();
        });

        function calculateBillPrice() {
            const billPrice = parseFloat($('#totalPrice').val()) * ((100 - parseFloat($('#discountInput').val())) / 100);
            $('#billPrice').val(billPrice);
        }

        $('#saleBtn').on('click', function () {
            let products = [];

            productsInList.forEach((item) => {
                products.push({ productId: item.id, quantity: item.quantity });
            });

            const orderModel = { customerName: $("#nameInput").val(), phoneNumber: $("#phoneInput").val(), fullAddress: $("#addInput").val(), emailAddress: $("#emailInput").val(), discount: parseFloat($("#discountInput").val()), employee: $("#empInput").val(), products: products }

            $.ajax({
                url: '/Orders/SaveSaleOrder',
                type: 'post',
                dataType: 'json',
                data: JSON.stringify(orderModel),
                contentType: 'application/json; charset=utf-8',
                success: function (message) {
                    console.log(message);
                }

            });

        });

    </script>
    }
